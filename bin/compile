#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# config
APACHE_VERSION="2.2.22"
APACHE_PATH="apache"
PHP_VERSION="5.3.10"
PHP_PATH="php"
NEWRELIC_VERSION="4.2.5.27"
NEWRELIC_PATH="newrelic"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

echo "-----> Run Sitebase buildpack"

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

APACHE_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/apache-$APACHE_VERSION.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

#PHP_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/php-5.4.1-with-fpm-heroku.tar.gz"
PHP_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/php-$PHP_VERSION.tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

NEWRELIC_URL="http://bubobox.deploy.s3.amazonaws.com/heroku/newrelic-${NEWRELIC_VERSION}-mod_php5.tar.gz"
echo "-----> Bundling New Relic agent version $NEWRELIC_VERSION"
curl --silent --max-time 60 --location "$NEWRELIC_URL" | tar xz

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

# enable New Relic agent
ln -s /app/newrelic/daemon bin/newrelic-daemon
mkdir -p /app/php/lib/php/extensions/no-debug-non-zts-20090626
ln -s /app/newrelic/newrelic-20090626.so php/lib/php/extensions/no-debug-non-zts-20090626/newrelic.so

cat >> php/php.ini << EOF
extension=newrelic.so
[newrelic]
newrelic.daemon.location = "/app/bin/newrelic-daemon"
newrelic.logfile = "/app/apache/logs/error_log"
newrelic.daemon.logfile = "/app/apache/logs/error_log"
newrelic.daemon.port = "/app/.newrelic.sock"
EOF

# set a slug_id identifier
slug_id=$(php/bin/php -r "echo md5(uniqid('', TRUE));")
echo $slug_id > SLUG_ID
echo "Creating Slug Identifier file with id: ${slug_id}"

cat >>boot.sh <<EOF
echo "Checking for WWWROOT environment variable..."
if [ -n "\${WWWROOT:+x}" ]; then
  sed -ie "s%/app/www%/app/www\$WWWROOT%" /app/apache/conf/httpd.conf
fi

for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/ext
export PHP_INI_SCAN_DIR=/app/www

echo "newrelic.license = \"\$NEWRELIC_LICENSE\"" >> "/app/php/php.ini"

# let's check for hook scripts
if [ -d www/.hooks ]; then
  for file in www/.hooks/*.sh; do
    if [ -f \$file ]; then
      /bin/bash \$file
    fi
  done
fi

echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR/*
